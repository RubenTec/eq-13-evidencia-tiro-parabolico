#Integrantes de equipo
#Ruben Enrique Hernandez Martinez - A01246584
#Diego Agustin Chuc Espinoza - A00830859
# Documento realizado 19 marzo de 2021


#Importacion de modulos
from random import randrange
from turtle import *
from freegames import vector

#Creacion de elementos
ball = vector(-200, -200)
speed = vector(0, 0)
targets = []

#Funcion para generar los disparos con los clicks del mouse
def tap(x, y):
    "Respond to screen tap."
    if not inside(ball):
        ball.x = -199
        ball.y = -199

#Para aumentar la velocidad del proyectil simplemente se 
#disminuyo el numero por el que estaba dividida 
        speed.x = (x + 200)/10
        speed.y = (y + 200)/10

def inside(xy):
    "Return True if xy within screen."
    return -200 < xy.x < 200 and -200 < xy.y < 200

#Genera los elementos
def draw():
    "Draw ball and targets."
    clear()

    for target in targets:
        goto(target.x, target.y)
        dot(20, 'blue')

    if inside(ball):
        goto(ball.x, ball.y)
        dot(6, 'red')

    update()

#Define el movimiento de la pelota roja.
def move():
    "Move ball and targets."
    if randrange(40) == 0:
        y = randrange(-150, 150)
        target = vector(200, y)
        targets.append(target)

    for target in targets:
        target.x -= 0.5

    if inside(ball):
        speed.y -= 0.35
        ball.move(speed)

    dupe = targets.copy()
    targets.clear()

    for target in dupe:
        if abs(target - ball) > 13:
            targets.append(target)

    draw()
#Cambios para cuando los circulos se cambien de la pantalla
    for target in targets:
        if not inside(target):
            target.x = 300
            target.y = 300

# Para aumentar la velocidad de los valores se disminuyo el tiempo
# en que se producia cada uno
    ontimer(move, 5)

#Configuracion de la pantalla y cambios finales
setup(420, 420, 370, 0)
hideturtle()
up()
tracer(False)
onscreenclick(tap)
move()
done()
